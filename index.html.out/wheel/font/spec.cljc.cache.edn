{:rename-macros {}, :renames {}, :use-macros {are cljs.test, is cljs.test, deftest cljs.test}, :excludes #{}, :name wheel.font.spec, :imports nil, :requires {wheel.font.config wheel.font.config, spec cljs.spec, cljs.spec cljs.spec, cljs.test cljs.test}, :uses nil, :defs {??spec {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1hfv/9txbbm/index.html.out/wheel/font/spec.cljc", :line 29, :column 10, :end-line 29, :end-column 16}, :name wheel.font.spec/??spec, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1hfv/9txbbm/index.html.out/wheel/font/spec.cljc", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {spec cljs.spec, cljs.spec cljs.spec, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:req-un :opt-un cljs.spec/keys cljs.core/sequential? :gfn dissoc :wheel.font/variants :pred-exprs :keys-pred wheel.font.spec/??spec i ??spec :opt-keys :ns :name cljs.core/string? spec/valid? :req-specs :file :end-column wheel.font.spec :type :wheel.font/font cljs.core/contains? cljs.core/map? % :column :wheel.font/name :req :fail :line not :expected :req-keys cljs.core/fn :opt-specs merge :end-line :wheel.font/fallback :pred-forms :error :pass :arglists :actual :doc :test :message :opt}, :order [:wheel.font/name cljs.core/string? :wheel.font/variants cljs.core/sequential? :wheel.font/fallback :wheel.font/font cljs.spec/keys :req :opt :req-un :opt-un :gfn :pred-exprs :keys-pred :opt-keys :req-specs :req-keys :opt-specs :pred-forms cljs.core/fn % cljs.core/map? cljs.core/contains? :type :expected :actual :message :error spec/valid? i :pass :fail not merge dissoc wheel.font.spec/??spec :ns :name :file :end-column :column :line :end-line :arglists :doc :test wheel.font.spec ??spec]}, :doc nil}