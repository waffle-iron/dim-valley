{:rename-macros {}, :renames {}, :externs {Element {}, Error {}, document {createEvent {}}, Object {initEvent {}, trigger {}}, jQuery {Event {}}}, :use-macros {is cljs.test, deftest cljs.test}, :excludes #{}, :name wheel.dom.events, :imports nil, :requires {wheel.dom.manipulation wheel.dom.manipulation, wheel.hoplon.on wheel.hoplon.on, h hoplon.core, hoplon.core hoplon.core, j javelin.core, javelin.core javelin.core, cljs.test cljs.test}, :uses nil, :defs {ensure-original-object! {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :line 9, :column 7, :end-line 9, :end-column 30, :arglists (quote ([e]))}, :name wheel.dom.events/ensure-original-object!, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :end-column 30, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, set-data! {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :line 15, :column 7, :end-line 15, :end-column 16, :arglists (quote ([e k v]))}, :name wheel.dom.events/set-data!, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :end-column 16, :method-params ([e k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists (quote ([e k v]))}, get-data {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :line 25, :column 7, :end-line 25, :end-column 15, :arglists (quote ([e k]))}, :name wheel.dom.events/get-data, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :end-column 15, :method-params ([e k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([e k]))}, make-bubblable! {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :line 30, :column 7, :end-line 30, :end-column 22, :arglists (quote ([el]))}, :name wheel.dom.events/make-bubblable!, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :end-column 22, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, trigger-native! {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :line 34, :column 7, :end-line 34, :end-column 22, :arglists (quote ([el name]))}, :name wheel.dom.events/trigger-native!, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :end-column 22, :method-params ([el name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el name]))}, trigger-jq! {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :line 41, :column 7, :end-line 41, :end-column 18, :arglists (quote ([el name] [el name properties])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([el name] [el name properties]), :arglists ([el name] [el name properties]), :arglists-meta (nil nil)}}, :name wheel.dom.events/trigger-jq!, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([el name] [el name properties]), :arglists ([el name] [el name properties]), :arglists-meta (nil nil)}, :method-params ([el name] [el name properties]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 3, :fn-var true, :arglists ([el name] [el name properties])}, ??events-set-get-data {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :line 49, :column 10, :end-line 49, :end-column 31}, :name wheel.dom.events/??events-set-get-data, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1ggv/9txbbm/index.html.out/wheel/dom/events.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 49, :end-line 49, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {h hoplon.core, hoplon.core hoplon.core, j javelin.core, javelin.core javelin.core, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{??events-set-get-data = :bar :ns :name :file :end-column :type :column :fail nil? wheel.dom.events :line not :foo clojure.core/deref :expected :end-line wheel.dom.events/??events-set-get-data :error :pass :input result :arglists :actual :doc :test :message}, :order [:input :foo :bar :type :expected :actual :message :error nil? clojure.core/deref result :pass :fail not = wheel.dom.events/??events-set-get-data :ns :name :file :end-column :column :line :end-line :arglists :doc :test wheel.dom.events ??events-set-get-data]}, :doc nil}